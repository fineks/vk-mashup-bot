import { SlashCommandBuilder } from 'discord.js'
import Utils, { ErrorMessageType } from '../../utils.js'
import { CommandCustomInteraction } from '../commandInteractions.js'
import { Repeat } from '../../modules/botPlayer.js'

export const interaction: CommandCustomInteraction = {
  name: 'repeat',
  djOnly: true,
  data: new SlashCommandBuilder()
    .setName('repeat')
    .setDescription('–ü–æ–≤—Ç–æ—Ä —Ç—Ä–µ–∫–∞ –∏–ª–∏ –æ—á–µ—Ä–µ–¥–∏')
    .addStringOption((option) =>
      option.setName('—Ä–µ–∂–∏–º').setDescription('–†–µ–∂–∏–º –ø–æ–≤—Ç–æ—Ä–∞').addChoices(
        {
          name: '–≤—ã–∫–ª',
          value: '–≤—ã–∫–ª'
        },
        {
          name: '—Ç—Ä–µ–∫',
          value: '—Ç—Ä–µ–∫'
        },
        {
          name: '–æ—á–µ—Ä–µ–¥—å',
          value: '–æ—á–µ—Ä–µ–¥—å'
        }
      )
    )
    .setDMPermission(false),
  execute: async function ({ guild, voice, client, interaction, respond }) {
    const player = client.playerManager.get(guild.id)

    if (!Utils.checkPlayer(respond, player)) return
    if (!Utils.checkNodeState(respond, player)) return
    if (!Utils.checkSameVoiceChannel(respond, voice)) return

    const repeatParam = interaction.options.getString('—Ä–µ–∂–∏–º')

    if (repeatParam) {
      if (repeatParam === '–æ—á–µ—Ä–µ–¥—å') {
        player.repeat = Repeat.Queue
        await respond({
          embeds: [
            Utils.generateErrorMessage('üîÅ –í–∫–ª—é—á–µ–Ω –ø–æ–≤—Ç–æ—Ä –æ—á–µ—Ä–µ–¥–∏.', ErrorMessageType.NoTitle)
          ]
        })
        return
      }
      if (repeatParam === '—Ç—Ä–µ–∫') {
        player.repeat = Repeat.Track
        await respond({
          embeds: [Utils.generateErrorMessage('üîÅ –í–∫–ª—é—á–µ–Ω –ø–æ–≤—Ç–æ—Ä —Ç—Ä–µ–∫–∞.', ErrorMessageType.NoTitle)]
        })
        return
      }
      if (repeatParam === '–≤—ã–∫–ª') {
        player.repeat = Repeat.Off
        await respond({
          embeds: [Utils.generateErrorMessage('üîÅ –ü–æ–≤—Ç–æ—Ä –≤—ã–∫–ª—é—á–µ–Ω.', ErrorMessageType.NoTitle)]
        })
        return
      }
    }

    let msg
    if (player.repeat === Repeat.Track) msg = '–ü–æ–≤—Ç–æ—Ä —Ç–µ–∫—É—â–µ–≥–æ —Ç—Ä–µ–∫–∞'
    if (player.repeat === Repeat.Queue) msg = '–ü–æ–≤—Ç–æ—Ä –æ—á–µ—Ä–µ–¥–∏'

    if (msg)
      await respond({
        embeds: [
          Utils.generateErrorMessage(
            `üîÅ ${msg} —Å–µ–π—á–∞—Å –≤–∫–ª—é—á–µ–Ω. –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ–∂–∏–º—ã: \`–æ—á–µ—Ä–µ–¥—å\`, \`—Ç—Ä–µ–∫\`, \`–≤—ã–∫–ª\``,
            ErrorMessageType.NoTitle
          )
        ]
      })
    else
      await respond({
        embeds: [
          Utils.generateErrorMessage(
            'üîÅ –ü–æ–≤—Ç–æ—Ä —Å–µ–π—á–∞—Å –≤—ã–∫–ª—é—á–µ–Ω. –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ–∂–∏–º—ã: `–æ—á–µ—Ä–µ–¥—å`, `—Ç—Ä–µ–∫`, `–≤—ã–∫–ª`',
            ErrorMessageType.NoTitle
          )
        ]
      })
  }
}
